C51 COMPILER V9.52.0.0   PCF85063BTL                                                       07/10/2018 14:42:35 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE PCF85063BTL
OBJECT MODULE PLACED IN .\Obj\PCF85063BTL.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Application\Source\PCF85063BTL.c LARGE BROWSE INCDIR(.\Application\Heade
                    -r) DEBUG OBJECTEXTEND PRINT(.\Lis\PCF85063BTL.lst) TABS(2) OBJECT(.\Obj\PCF85063BTL.obj)

line level    source

   1          #include "PCF85063BTL.h"
   2          
   3          #include <intrins.h>
   4          
   5          /***********************************************
   6          
   7          ************************************************/
   8          void PCF85063BTL_Delay(unsigned int us)
   9          {
  10   1        while( us--)
  11   1        {
  12   2          _nop_(); 
  13   2        }             
  14   1      }
  15          /***********************************************
  16          ************************************************/
  17          void SPI_SendByte(unsigned char dat)// Send dat to SPI device/Slave
  18          {
  19   1        unsigned char i;
  20   1        for (i=0; i<8; i++)            //
  21   1        {
  22   2          PCF85063BTL_SCK_Clr();          //    
  23   2          if( (dat&0x80)==0x80 )       //
  24   2          {
  25   3              PCF85063BTL_SDI_Set();
  26   3          }
  27   2          else
  28   2          {
  29   3              PCF85063BTL_SDI_Clr();
  30   3          }
  31   2          PCF85063BTL_Delay(1);           //
  32   2          PCF85063BTL_SCK_Set();          //
  33   2          PCF85063BTL_Delay(1);           //
  34   2          dat <<= 1;                   //
  35   2        }
  36   1      }
  37          /***********************************************
  38          ************************************************/
  39          unsigned char SPI_ReceiveByte(void)
  40          {
  41   1        unsigned char i;
  42   1        unsigned char dat = 0;
  43   1      
  44   1        PCF85063BTL_SDO_Set();          //
  45   1        for (i=0; i<8; i++)         //
  46   1        {
  47   2          dat <<= 1;                //
  48   2          PCF85063BTL_SCK_Clr();       //
  49   2          PCF85063BTL_Delay(1);        //
  50   2              
  51   2          if (PCF85063BTL_SDO)        //If  PCF85063BTL_SDO is HIGH, dat will be 1(one) 
  52   2          {
  53   3            dat |= 0x01;            //
  54   3          }
C51 COMPILER V9.52.0.0   PCF85063BTL                                                       07/10/2018 14:42:35 PAGE 2   

  55   2          PCF85063BTL_SCK_Set();       //
  56   2          PCF85063BTL_Delay(1);        // 
  57   2        }
  58   1        return dat;
  59   1      }
  60          ////////////////////////////////////////////////////////////
  61          unsigned char SPI_ReadTime(unsigned char addr)
  62          {
  63   1        //unsigned char i;
  64   1        unsigned char dat = 0;
  65   1        PCF85063BTL_CS_Set();
  66   1        SPI_SendByte(Read_Mode|addr);//send Read_mode and Seconds register's address
  67   1        dat=SPI_ReceiveByte();
  68   1        PCF85063BTL_CS_Clr();
  69   1        return dat;
  70   1      }
  71          void SPI_WriteTime(unsigned char val,unsigned char addr)
  72          {
  73   1        //PCF85063BTL_CS_Clr();
  74   1        PCF85063BTL_CS_Set();
  75   1        SPI_SendByte(Write_Mode|addr);//send Read_mode and Seconds register's address
  76   1        SPI_SendByte(val);
  77   1        SPI_SendByte(val);
  78   1        PCF85063BTL_CS_Clr();
  79   1      }
  80          /***********************************************
  81          ************************************************/
  82          
  83          void SPI_Init(void)
  84          {
  85   1        //P20,P21,P22 P23 quasi-bidirectional
  86   1        //P2M1 =0x00;  
  87   1        //P2M0 =0x00;
  88   1        
  89   1        P2M1 &=~( (1<<0) | (1<<1) | (1<<2) );  //~ bitwise NOT
  90   1        P2M0 &=~( (1<<0) | (1<<1) | (1<<2) );  
  91   1        PCF85063BTL_CS_Set();
  92   1        PCF85063BTL_CS_Clr();
  93   1        PCF85063BTL_SCK_Clr();
  94   1      }
  95          
  96          void Read_time(unsigned char *months,unsigned char *days,unsigned char *hours,unsigned char *mins,unsigned
             - char *seconds)
  97          {
  98   1          //unsigned char seconds,mins, hours;
  99   1          *months=SPI_ReadTime(Months);
 100   1        
 101   1          *days=SPI_ReadTime(Days);
 102   1        
 103   1          *hours=SPI_ReadTime(Hours);
 104   1          /*SendUART1(ten(*hours)+48);
 105   1          SendUART1(unit(*hours)+48);   
 106   1          SendUART1(0x3A);// ":" ASCII letter*/
 107   1          
 108   1          *mins=SPI_ReadTime(Minutes);
 109   1          /*SendUART1(ten(*mins)+48);
 110   1          SendUART1(unit(*mins)+48);    
 111   1          SendUART1(0x3A);// ":" ASCII letter*/
 112   1          
 113   1          *seconds=SPI_ReadTime(Seconds);
 114   1          //P0=*seconds;
 115   1          /*SendUART1(ten(*seconds&0x7f)+48);
C51 COMPILER V9.52.0.0   PCF85063BTL                                                       07/10/2018 14:42:35 PAGE 3   

 116   1          SendUART1(unit(*seconds&0x7f)+48);
 117   1          SendUART1(10);      //new line*/
 118   1      }
 119          
 120          int Day_Of_Year(unsigned char months,unsigned char days) // this function is used to count the date in a y
             -ear example: 22 March is the 80th day of the year
 121          {
 122   1        
 123   1        switch(months)
 124   1        {
 125   2        case 1: // Jan
 126   2          return days;
 127   2          break;
 128   2        case 2:// Feb
 129   2          return 31+days;
 130   2          break;
 131   2        case 3:// Mar
 132   2          return 31+28+days;
 133   2          break;
 134   2        case 4: //April
 135   2          return 31*2+28+days;
 136   2          break;
 137   2        case 5: // May
 138   2          return 31*2+28+30+days;
 139   2          break;
 140   2        case 6: // June
 141   2          return 31*3+28+30+days;
 142   2          break;  
 143   2        case 7: // July
 144   2          return 31*3+28+30*2+days;
 145   2          break;    
 146   2        case 8: //August
 147   2          return 31*4+28+30*2+days;
 148   2          break;    
 149   2        case 9: // September
 150   2          return 31*5+28+30*2+days;
 151   2          break;
 152   2        case 10: // Oct
 153   2          return 31*5+28+30*3+days;
 154   2          break;  
 155   2        case 11: // Nov
 156   2          return 31*6+28+30*3+days;
 157   2          break;
 158   2        case 12: // Dec
 159   2          return 31*6+28+30*4+days;
 160   2          break;
 161   2      } 
 162   1      }
*** WARNING C291 IN LINE 162 OF Application\Source\PCF85063BTL.c: not every exit path returns a value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    373    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      15
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
