C51 COMPILER V9.52.0.0   UART1                                                             05/02/2018 15:37:32 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE UART1
OBJECT MODULE PLACED IN .\Obj\UART1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Application\Source\UART1.c LARGE BROWSE INCDIR(.\Application\Header) DEB
                    -UG OBJECTEXTEND PRINT(.\Lis\UART1.lst) TABS(2) OBJECT(.\Obj\UART1.obj)

line level    source

   1          #include "stc15f2k60s2.h"
   2           #include "PCF85063BTL.h"
   3          #define TBAUD (65536-FOSC/4/BAUD)
   4          #define FOSC 18432000L
   5          #define BAUD 115200
   6          
   7          
   8          bit busy;
   9          
  10          unsigned char SPI_ReadTime(unsigned char addr);
  11          
  12          void Uart() interrupt 4 using 1
  13          {
  14   1        if(RI) 
  15   1        {
  16   2          RI=0;
  17   2        }
  18   1        if(TI)
  19   1        {
  20   2          TI=0;
  21   2          busy=0;
  22   2        }
  23   1      }
  24          void initUART1(void)
  25          {
  26   1        SCON=0x50; //0101 0000 8-bit uart,  baud rate variable
  27   1        AUXR |=0x95;//10010101 Timer2 as Baud Rate generator
  28   1        T2L=TBAUD;
  29   1        T2H=TBAUD>>8; 
  30   1        ES=1;           // enable uart1 interrupt
  31   1        EA=1;           // each interrupt source will be enable or disable by setting its interrupt bit
  32   1        PS=0;           // Serial Port 1 interrupt priority control bit, DS page 561
  33   1      }
  34          
  35          void SendUART1(unsigned char dat)
  36          {
  37   1        while(busy);
  38   1        busy=1;
  39   1        ACC=dat;
  40   1        SBUF=ACC;
  41   1      }
  42          
  43          
  44          
  45           void SendString(char *s)
  46          {
  47   1        while(*s)
  48   1        {
  49   2          SendUART1(*s++);
  50   2        }
  51   1      }
  52          unsigned char ten(unsigned char BCD)
  53          {
  54   1        return (BCD)>>4;
C51 COMPILER V9.52.0.0   UART1                                                             05/02/2018 15:37:32 PAGE 2   

  55   1      }
  56          unsigned char unit(unsigned char BCD)
  57          {
  58   1      
  59   1        //unit=BCD&0x0f;
  60   1        //dec=ten*10+unit;
  61   1        return BCD&0x0f;
  62   1      }
  63          unsigned char DectoBCD(unsigned char dec)
  64          {
  65   1      /*  unsigned char ten,unit;
  66   1        ten=BCD>>4;
  67   1        unit=BCD&0x0f;
  68   1        //dec=ten*10+unit;
  69   1        return ten*10+unit;*/
  70   1        return dec;
  71   1      }
  72          //if dat=1, we need to use ASCII value to display "1" on UART1
  73          unsigned char ASCII_Letter(unsigned char dat)
  74          {
  75   1        return dat+48;
  76   1      }
  77          
  78          void Display_time(void)
  79          {
  80   1          unsigned char seconds,mins, hours;
  81   1      
  82   1          hours=SPI_ReadTime(Hours);
  83   1          SendUART1(ten(hours)+48);
  84   1          SendUART1(unit(hours)+48);    
  85   1          SendUART1(0x3A);// ":" ASCII letter
  86   1          
  87   1          mins=SPI_ReadTime(Minutes);
  88   1          SendUART1(ten(mins)+48);
  89   1          SendUART1(unit(mins)+48);   
  90   1          SendUART1(0x3A);// ":" ASCII letter
  91   1          
  92   1          seconds=SPI_ReadTime(Seconds);
  93   1          P0=seconds;
  94   1          SendUART1(ten(seconds&0x7f)+48);
  95   1          SendUART1(unit(seconds&0x7f)+48);
  96   1          SendUART1(10);      //new line
  97   1      }
  98          
  99           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    187    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
